# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Maven@3
  displayName: Package App
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'
- task: CmdLine@2
  displayName: List directory contents
  inputs:
    script: |
      echo "Listing current dir contents"
      pwd
      ls -la
      echo "Target dir contents:"
      echo "Artifact Staging dir: $(Build.ArtifactStagingDirectory)"
      echo "Local dir: $(Build.Repository.LocalPath)"
      echo "Staging dir: $(Build.StagingDirectory)"
      echo "Pipeline dir: $(Pipeline.Workspace)"
      ls -la "$(Build.Repository.LocalPath)"

- task: oc-cmd@2
  displayName: Deploy to OpenShift
  inputs:
    openshiftService: 'ocp-aro'
    cmd: 'oc start-build spring-petclinic-2 --from-file="$(Build.Repository.LocalPath)"/target/app.jar -n aro-ws --follow'
- task: oc-cmd@2
  displayName: Tag image
  inputs:
    openshiftService: 'ocp-aro'
    cmd: 'oc tag spring-petclinic-2:latest spring-petclinic-2:dev -n aro-ws'
